## Metadata for MariaDB configuration
## This metadata is used to augment the value.yaml to drive IPC UI for configuration of the Helm chart installation
     
## Architecture configuration metadata
## Arch metadata
arch:
  __metadata:
    label: "Architecture scheduling preferences"
  amd64:
    __metadata:
      name: "amd64"
      label: "AMD64 scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"  
      - label: "3 - Most preferred"
        value: "3 - Most preferred"  
 
  ppc64le:
    __metadata:
      name: "ppc64le"
      label: "PPC64LE scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"  
      - label: "3 - Most preferred"
        value: "3 - Most preferred"  
  
  s390x:
    __metadata:
      name: "s390x"
      label: "S390X scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"  
      - label: "3 - Most preferred"
        value: "3 - Most preferred"  

## Image configuration metadata
image:
  __metadata:
    label: "Docker image configuration"
  repository:
    __metadata:
      name: "Repository"
      label: "Docker Repository"
      description: "Docker registry to pull image from."
      type: "string"
      immutable: "false"
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: "false"
      required: true
      options:
      - label: "IfNotPresent"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  
## MariaDB specific configuration
database:
  __metadata:
    label: "MariaDB configuration"
  user:
    __metadata:
      name: "user"
      label: "User name"
      description: "The MariaDB user. Defaults to test."
      type: "string"
      immutable: "false"
      required: false
  password:
    __metadata:
      name: "password"
      label: "Password"
      description: "Password for the MariaDB user. Defaults to a random 10 character password."
      type: "password"
      immutable: "false"
      required: false
  name:
    __metadata:
      name: "name"
      label: "Database name"
      description: "Database name to be created. Defaults to a TEST database."
      type: "string"
      immutable: "false"
      required: false
  dbcmd:
    __metadata:
      name: "dbcmd"
      label: "Database command for helm test"
      description: "Database command to be used for helm test. Defaults to mysql."
      type: "string"
      immutable: "false"
      required: false

## Service configuration metadata
service:
  __metadata:
    label: "Service configuration"
  name: 
    __metadata:
      name: "Name"
      label: "Service Name"
      description: "This is the Service Name"
      type: "string"
      immutable: "false"
      required: true
      validation: "^[a-zA-Z]([-a-zA-Z0-9])+$"
  type: 
    __metadata:
      name: "Type"
      label: "Service Type"
      description: "This is the Service Type"
      type: "string"
      immutable: "false"
      required: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  port:
    __metadata:
      name: "Port"
      label: "Service Port"
      description: "This is the Service Port for the database"
      type: "string"
      immutable: "false"
      required: true

## Data volume claim options
dataVolume:
  __metadata:
    label: "Data volume configuration"
  name:
    __metadata:
      name: "data-stor"
      label: "Name of the persistent volume claim"
      description: "By default a persistent volume claim will be created with this name."
      type: "string"
      immutable: "false"
      required: true
  existingClaimName:
    __metadata:
      name: "existingClaimName"
      label: "Existing volume claim"
      description: "By default a new persistent volume claim will be created. Specify an existing claim here if one is available."
      type: "string"
      immutable: "false"
      required: false
  storageClassName:
    __metadata:
      name: "storageClassName"
      label: "Existing storage class name"
      description: "Choose a specific storage class name. Defaults to the default storage class in the cluster."
      type: "string"
      immutable: "false"
      required: false
  size:
    __metadata:
      name: "size"
      label: "Size of the volume claim"
      description: "Defaults to 20Gi of storage request. Choose a different size of disk if needed."
      type: "string"
      immutable: "false"
      required: true

## Persistence options
persistence:
  __metadata:
    label: "Data persistence configuration"
  enabled:
   __metadata:
      name: "enabled"
      label: "Enable persistence for this deployment"
      description: "Enables persistence for this deployment. Defaults to true. A persistent volume is required."
      type: "boolean"
      immutable: "false"
      required: true
  useDynamicProvisioning:
   __metadata:
      name: "useDynamicProvisioning"
      label: "Use dynamic provisioning for persistent volume"
      description: "If dynamic provisioning is available in the cluster this option will automatically provision the requested volume if set to true. Defaults to false."
      type: "boolean"
      immutable: "false"
      required: true

## Resource requests and limits configuration metadata
resources:
  __metadata:
    label: "Resource configuration"
  requests:
    cpu: 
      __metadata: 
        label: "CPU request"
        description: "The requested CPU"
        type: "string"
        required: true   
    memory: 
      __metadata: 
        label: "Memory request"
        description: "The memory request"
        type: "string"
        required: true   
  limits:
    cpu: 
      __metadata: 
        label: "CPU limit"
        description: "The CPU limit"
        type: "string"
        required: true   
    memory: 
      __metadata: 
        label: "Memory limit"
        description: "The memeory limit"
        type: "string"
        required: true   

